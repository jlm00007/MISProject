@page
@model MISProject.Pages.playerPositionModel
@{
    var position = HttpContext.Request.Query["position"];
}
<head>
    <link rel="stylesheet" href="site.css" />
    <style>
    </style>
</head>


<h1>Selecet a Position</h1>
<a href="/playerPosition?position=catcher">Catcher</a>
<a href="/playerPosition?position=pitcher">Pitcher</a>
<a href="/playerPosition?position=first base">First Base</a>
<a href="/playerPosition?position=second base">Second Base</a>
<a href="/playerPosition?position=shortstop">Shortstop</a>
<a href="/playerPosition?position=third base">Third Base</a>
<a href="/playerPosition?position=left field">Left Field</a>
<a href="/playerPosition?position=center field">Center Field</a>
<a href="/playerPosition?position=right field">Right Field</a>
<a href="/playerPosition?position=designated hitter">Designated Hitter</a>













<body>
    <h2 style="color:black" id="names" style="visibility: hidden;"></h2>
    <div style="color:black" id="numbers" style="visibility: hidden;"></div>
    <div style="color:black" id="positions" style="visibility: hidden;"></div>
    <script>
        // Define the displayPlayerPos function
        async function displayPlayerPos(position) {
            const response = await fetch(`https://localhost:7270/api/Player/position/${position}`);
            const data = await response.json();
            const namesElement = document.getElementById('names');
            const numbersElement = document.getElementById('numbers');
            const positionsElement = document.getElementById('positions');
            // Clear previous data
            namesElement.innerHTML = '';
            numbersElement.innerHTML = '';
            positionsElement.innerHTML = '';
            data.forEach(player => {
                // Create new elements for each player
                const nameElement = document.createElement('div');
                nameElement.innerHTML = player.name;
                namesElement.appendChild(nameElement);
                const numberElement = document.createElement('div');
                numberElement.innerHTML = player.number;
                numbersElement.appendChild(numberElement);
                const positionElement = document.createElement('div');
                positionElement.innerHTML = player.position;
                positionsElement.appendChild(positionElement);
            });
            // Make elements visible
            namesElement.style.visibility = 'visible';
            numbersElement.style.visibility = 'visible';
            positionsElement.style.visibility = 'hidden';
        }
    // Call the function with the position parameter
    displayPlayerPos("@position");
    </script>

</body>